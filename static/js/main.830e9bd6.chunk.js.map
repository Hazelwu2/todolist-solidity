{"version":3,"sources":["TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","_this","this","react_default","a","createElement","id","onSubmit","event","preventDefault","props","createTask","task","value","ref","input","type","className","placeholder","required","hidden","tasks","map","key","_React$createElement","Object","defineProperty","name","defaultChecked","completed","checkbox","onClick","toggleCompleted","content","Component","web3","Web3","givenProvider","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","account","taskCount","loading","bind","assertThisInitialized","loadBloackchainData","getAccounts","getContract","eth","accounts","setState","todoList","Contract","TodoListContract","abi","methods","i","console","error","concat","toConsumableArray","log","_this2","send","from","once","receipt","taskId","_this3","href","target","role","src_TodoList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.830e9bd6.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass TodoList extends Component {\n\n  render() {\n    return (\n      <div id=\"content\">\n        <form onSubmit={(event) => {\n          event.preventDefault()\n          this.props.createTask(this.task.value)\n        }}>\n          <input\n            id=\"newTask\"\n            ref={(input) => {\n              this.task = input\n            }}\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"新增 Todo\"\n            required />\n          <input type=\"submit\" hidden={true} />\n        </form>\n        <ul id=\"taskList\" className=\"list-unstyled\">\n          {this.props.tasks.map((task, key) => {\n            return (\n              <div className=\"taskTemplate\" className=\"checkbox\" key={key}>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    name={task.id}\n                    defaultChecked={task.completed}\n                    ref={(input) => {\n                      this.checkbox = input\n                    }}\n                    onClick={(event) => {\n                      this.props.toggleCompleted(this.checkbox.name)\n                    }} />\n                  <span className=\"content\">{task.content}</span>\n                </label>\n              </div>\n            )\n          })}\n        </ul>\n        <ul id=\"completedTaskList\" className=\"list-unstyled\">\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;","import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport './App.css'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// Contract Import\nimport TodoListContract from './artifacts/contracts/TodoList.sol/TodoList.json'\nimport TodoList from './TodoList'\n\nconst TodoListAddress = \"0xa50764364bc5a88445B3bA14D979Ec1e0a02afce\"\nconst web3 = new Web3(Web3.givenProvider || 'http://localhost:7545')\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBloackchainData()\n  }\n\n  async loadBloackchainData() {\n    // const web3 = new Web3(Web3.givenProvider || 'http://localhost:7545')\n\n    // Get User Account\n    this.getAccounts()\n\n    // Get TodoList Contract\n    this.getContract()\n  }\n\n  async getAccounts() {\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n  }\n\n  async getContract() {\n    this.setState({\n      tasks: []\n    })\n\n    const todoList = new web3.eth.Contract(TodoListContract.abi, TodoListAddress)\n    this.setState({ todoList })\n    const taskCount = await todoList.methods.taskCount().call()\n    this.setState({ taskCount })\n\n    for (let i = 1; i <= taskCount; i++) {\n      console.error('for loop getContract')\n      const task = await todoList.methods.tasks(i).call()\n      this.setState({\n        tasks: [...this.state.tasks, task]\n      })\n    }\n\n    this.setState({ loading: false })\n    console.log('state.tasks', this.state.tasks)\n  }\n\n  createTask(content) {\n    this.setState({ loading: true })\n    this.state.todoList.methods.createTask(content).send({ from: this.state.account })\n      .once('receipt', (receipt) => {\n        this.setState({ loading: false })\n        this.getContract()\n      })\n  }\n\n  toggleCompleted(taskId) {\n    this.setState({ loading: true })\n    this.state.todoList.methods.toggleCompleted(taskId).send({ from: this.state.account })\n      .once('receipt', (receipt) => {\n        console.log(receipt)\n        this.getContract()\n        this.setState({ loading: false })\n      })\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      taskCount: 0,\n      tasks: [],\n      loading: true\n    }\n\n    this.createTask = this.createTask.bind(this)\n    this.toggleCompleted = this.toggleCompleted.bind(this)\n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a className=\"navbar-brand col-sm-3 col-md-2 mr-0\" href=\"http://www.dappuniversity.com/free-download\" target=\"_blank\">KcryptoCamp Week4 Homework | Todo List</a>\n          <ul className=\"navbar-nav px-3\">\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n              <small><a className=\"nav-link\" href=\"#\"><span id=\"account\"></span></a></small>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex justify-content-center\">\n              {this.state.loading\n                ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading...</p></div>\n                : <TodoList\n                  tasks={this.state.tasks}\n                  createTask={this.createTask}\n                  toggleCompleted={this.toggleCompleted} />\n              }\n            </main>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}